# spring.ai.chat.client.enabled=false

spring.threads.virtual.enabled=true
# LB that is provisioned on the dc-service
spring.cassandra.contact-points=<HCD-service-endpoint>
#Lb that is used by the CQL connectivity 
#spring.cassandra.contact-points=a8ab4df3d46354e18adad8f0110ab103-818716419.us-east-2.elb.amazonaws.com
#spring.cassandra.contact-points=localhost
spring.cassandra.port=9042
spring.cassandra.local-datacenter=dc-1
spring.cassandra.username=hcd-superuser
spring.cassandra.password=<yourPassword>


#spring.ai.vectorstore.cassandra.keyspace=default_namespace
#spring.ai.vectorstore.cassandra.table=ai_vectorstore
#spring.ai.vectorstore.cassandra.content-column-name=content
#spring.ai.vectorstore.cassandra.embedding-column-name=embedding
#spring.ai.model.embedding=text-embedding-ada-003
#spring.ai.openai.embedding.options.model=text-embedding-ada-002
spring.ai.vectorstore.cassandra.initialize-schema=true
###################
# Anthropic Claude 3
###################

# spring.ai.anthropic.api-key=${ANTHROPIC_API_KEY}
# spring.ai.openai.chat.options.model=llama3-70b-8192
# spring.ai.anthropic.chat.options.model=claude-3-5-sonnet-20240620


###################
# Groq
###################

# spring.ai.openai.api-key=${GROQ_API_KEY}
# spring.ai.openai.base-url=https://api.groq.com/openai
# spring.ai.openai.chat.options.model=llama3-70b-8192


###################
# OpenAI
###################

spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o

# spring.ai.openai.chat.options.functions=getBookingDetails,changeBooking,cancelBooking

# spring.ai.openai.chat.enabled=false

# Disable the OpenAI embedding when the local huggingface embedding (e.g. spring-ai-transformers-spring-boot-starter) is used.
# spring.ai.openai.embedding.enabled=false

###################
# Azure OpenAI
###################
# spring.ai.azure.openai.api-key=${AZURE_OPENAI_API_KEY}
# spring.ai.azure.openai.endpoint=${AZURE_OPENAI_ENDPOINT}
# spring.ai.azure.openai.chat.options.deployment-name=gpt-4o

###################
# Mistral AI
###################

# spring.ai.mistralai.api-key=${MISTRAL_AI_API_KEY}
# spring.ai.mistralai.chat.options.model=mistral-small-latest

# spring.ai.mistralai.chat.options.model=mistral-small-latest
# spring.ai.mistralai.chat.options.functions=getBookingDetails,changeBooking,cancelBooking
# # spring.ai.retry.on-client-errors=true
# # spring.ai.retry.exclude-on-http-codes=429

###################
# Vertex AI Gemini
###################

# spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_GEMINI_PROJECT_ID}
# spring.ai.vertex.ai.gemini.location=${VERTEX_AI_GEMINI_LOCATION}
# spring.ai.vertex.ai.gemini.chat.options.model=gemini-1.5-pro-001
# # spring.ai.vertex.ai.gemini.chat.options.model=gemini-1.5-flash-001
# spring.ai.vertex.ai.gemini.chat.options.transport-type=REST

# spring.ai.vertex.ai.gemini.chat.options.functions=getBookingDetails,changeBooking,cancelBooking

###################
#  Milvus Vector Store
###################
# Change the dimentions to 384 if the local huggingface embedding (e.g. spring-ai-transformers-spring-boot-starter) is used.
# spring.ai.vectorstore.milvus.embedding-dimension=384

###################
# PGVector
###################
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=postgres

###################
# QDrant
###################
# spring.ai.vectorstore.qdrant.host=localhost
# spring.ai.vectorstore.qdrant.port=6334

###################
# Chroma
###################
# spring.ai.vectorstore.chroma.client.host=http://localhost
# spring.ai.vectorstore.chroma.client.port=8000
